@using DomainClasses.Models
@helper RenderCategories(ICollection<CategoriesContent> categories)
{
    if (categories != null)
    {
        var root = categories.FirstOrDefault(c => c.CategoriesContentId == 1);
        <div class="cf nestable-lists">
            <div class="dd" id="nestable">
                @if (root != null)
                {
                    <ol class="dd-list">
                        @RenderCategoryChildren(root.Children)
                    </ol>
                }
            </div>
        </div>
    }
}

@helper RenderCategoryChildren(ICollection<CategoriesContent> categories)
{
    if (categories != null)
    {
        foreach (var category in categories)
        {
            if (category != null)
            {
                <li class="dd-item dd3-item" data-id="@category.CategoriesContentId" data-name="@category.Name">
                    <span class="dd-icon glyphicon glyphicon-chevron-down"></span>
                    <div class="dd-handle dd3-handle">Drag</div>
                    <div class="dd3-content">@category.Name</div>
                    <div class="dd-dev"></div>
                    @if (category.Children.Any())
                    {
                        <ol class="dd-list">
                            @RenderCategoryChildren(category.Children)
                        </ol>
                    }
                </li>
            }
        }
    }
}